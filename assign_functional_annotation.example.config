---
# This example is actually a more complex one than I eventually want to serve
#  as the example config provided to users.  I'm building it and testing with
#  the most advanced of the use cases I was given.

general:
   # All proteins will start out with this product name, before evidence
   #  is evaluated
   default_product_name: hypothetical protein
   
   # If Yes, each annotation attribute is allowed from a different source.  For
   #  example, if there is a high-quality HMM hit that provides a gene product
   #  name and GO terms but lacks an EC number, another source (such as a BLAST
   #  hit) may provide the EC number.
   allow_attributes_from_multiple_sources: No

   # This is purely for development purposes and should usually best set to 0.  If
   #  you set this to any other integer, it will limit the number of polypeptides
   #  for which results are considered.  This allows for more rapid testing of
   #  the parser on larger datasets.
   debugging_polypeptide_limit: 0

indexes:
   coding_hmm_lib: /dbs/coding_hmm_lib.sqlite3
   uniref100: /dbs/uniprot_trembl.sqlite3
   uniprot_sprot: /dbs/uniprot_sprot.sqlite3

input:
   # These are the files on which annotation will be applied.  At a minimum, the 'fasta'
   #  option must be defined.  GFF3 output cannot be specified unless 'gff3' input is
   #  also provided.
   # These test data are for SRS15430
   polypeptide_fasta: ./sample_data/SRS015430/SRS015430.metagenemark.faa
   gff3: ./sample_data/SRS015430/SRS015430.metagenemark.gff3

order:
   - coding_hmm_lib__equivalog
   - coding_hmm_lib__equivalog_domain
   - rapsearch2__uniref100__trusted_full_full
   - rapsearch2__uniref100__trusted_partial_partial
#   - tmhmm
#   - lipoprotein_motif

evidence:
   - label: tmhmm
     type: TMHMM
     # this is the product name that will be assigned given a positive TMHMM match
     product_name: Putative integral membrane protein
     # minimum required predicted helical spans across the membrane required to apply evidence
     min_helical_spans: 3
     path: /usr/local/projects/dacc/output_repository/tmhmm/14365_default/tmhmm.raw.list

   - label: coding_hmm_lib__equivalog
     type: HMMer3_htab
     path: ./sample_data/SRS015430/SRS015430.coding_hmm.htab
     # common classes are: equivalog, hypoth_equivalog, pfam, subfamily
     #  others: domain, equivalog_domain, exception, hypoth_equivalog_domain, paralog,
     #          paralog_domain, repeat, signature, subfamily_domain, superfamily
     class: equivalog
     index: coding_hmm_lib
     # These can be used to add any text before or after what is pulled from the match
     prepend_text: putative
     append_text: fragment

   - label: coding_hmm_lib__equivalog_domain
     type: HMMer3_htab
     path: ./sample_data/SRS015430/SRS015430.coding_hmm.htab
     class: equivalog_domain
     index: coding_hmm_lib

   - label: rapsearch2__uniref100__trusted_full_full
     type: RAPSearch2_m8
     path: ./sample_data/SRS015430/SRS015430.rapsearch2.uniref100.m8
     class: trusted
     index: uniref100
     query_cov: 85%
     match_cov: 85%
     percent_identity_cutoff: 50%

   - label: rapsearch2__uniref100__trusted_partial_partial
     type: RAPSearch2_m8
     path: ./sample_data/SRS015430/SRS015430.rapsearch2.uniref100.m8
     class: trusted
     index: uniref100
     query_cov: 50%
     match_cov: 50%
   
   - label: lipoprotein_motif
     type: lipoprotein_motif_bsml
     path: /usr/local/projects/dacc/output_repository/lipoprotein_motif/14365_default/lipoprotein_motif.bsml.list
     # This is the product name that will be assigned given a positive match
     product_name: Putative lipoprotein
     
